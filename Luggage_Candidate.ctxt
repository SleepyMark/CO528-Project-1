#BlueJ class context
comment0.target=Luggage_Candidate
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Luggage_Candidates\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Luggage_Candidate()
comment10.params=b
comment10.target=Luggage_Candidate\ crossOver(Luggage_Candidate)
comment10.text=\r\n\ This\ solution\ crosses\ over\ the\ current\ &\ a\ given\ solution,\ in\ an\ alternating\ pattern\r\n\ @return\ Crossover\ of\ the\ two\ solutions\r\n
comment2.params=
comment2.target=void\ mutate()
comment3.params=
comment3.target=boolean[]\ getValues()
comment3.text=\r\n\ @return\ The\ 100\ boolean\ inputs\ of\ the\ candidate\r\n
comment4.params=fit
comment4.target=void\ setFitness(double)
comment4.text=\r\n\ Sets\ the\ fitness\ value\ of\ the\ solution.\ Previous\ fitness\ is\ a\ stored\r\n
comment5.params=
comment5.target=double\ getFitness()
comment5.text=\r\n\ Returns\ the\ fitness\ of\ the\ solution\r\n\ @return\ (double)\ fitnessValue\r\n
comment6.params=weight
comment6.target=void\ setWeight(double)
comment6.text=\r\n\ Sets\ the\ weight\ of\ the\ current\ solution.\ Previous\ weight\ is\ not\ stored\r\n
comment7.params=
comment7.target=void\ revert()
comment7.text=\r\n\ Reverts\ the\ changes\ done,\ when\ mutated\r\n
comment8.params=
comment8.target=double\ getWeight()
comment8.text=\r\n\ Returns\ the\ weight\ of\ the\ solution\r\n\ @return\ Weight\ of\ the\ solution\r\n
comment9.params=index\ value
comment9.target=void\ setDial(int,\ boolean)
comment9.text=\r\n\ Sets\ the\ dial\ value\ at\ the\ given\ index\r\n\ @index\ The\ dial\ which\ is\ changed\ (0-20)'\r\n\ @value\ Boolean\ value\ to\ be\ written-in\r\n
numComments=11
