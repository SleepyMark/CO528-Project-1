#BlueJ class context
comment0.target=Population
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Population\ here.\r\n\r\n\ @author\ Mark\ Cabrera\ (mc967)\r\n\ @version\ 2.0.00\r\n
comment1.params=size
comment1.target=Population(int)
comment1.text=\r\n\ Initalises\ values\ for\ the\ class,\ and\ randomly\ generates\ @size\ solutions\r\n\ @size\ Number\ of\ solutions\r\n
comment10.params=returnSize
comment10.target=java.util.ArrayList\ championOperator(int)
comment10.text=\r\n\ Returns\ solutions\ that\ are\ 'better'\ than\ the\ other\ candidates\r\n\ @return\ Array\ of\ size\ @returnSize\ of\ the\ winning\ candidates\r\n
comment11.params=returnSize
comment11.target=java.util.ArrayList\ randomChoiceOperator(int)
comment11.text=\r\n\ Returns\ random\ solutions\ from\ the\ population.\ Two\ solutions\ are\ chosen\ at\ random,\ and\ then\ randomly\ chosen\r\n\ @return\ Array\ of\ 'winning'\ solutions\r\n
comment12.params=returnSize\ choices
comment12.target=java.util.ArrayList\ chooseRandom(int,\ java.util.ArrayList)
comment12.text=\r\n\ Chooses\ solutions,\ competly\ based\ on\ luck.\ Candidates\ can\ be\ chosen\ moer\ than\ once\r\n\ @return\ ArrayList\ of\ chosen\ candidates\r\n
comment13.params=
comment13.target=void\ emptyPopulation()
comment13.text=\r\n\ Empties\ the\ popluation\ ArrayList\r\n
comment14.params=a
comment14.target=void\ addCandidate(Candidate_Solution)
comment14.text=\r\n\ Adds\ candidate\ to\ the\ population\ &\ is\ checked\ whether\ or\ it\ contains\ the\ best\ fitness\ value\r\n
comment15.params=newCandidates
comment15.target=void\ addCandidates(java.util.ArrayList)
comment15.text=\r\n\ Adds\ candidates\ to\ the\ population\ &\ all\ are\ checked\ if\ they\ have\ a\ lowerer\ fitness,\ than\ the\ current\ population\r\n
comment16.params=
comment16.target=void\ mutatePopulation()
comment16.text=\r\n\ Mutates\ all\ of\ the\ candidates\ in\ the\ population\r\n
comment17.params=newPopulation
comment17.target=void\ setPopulation(java.util.ArrayList)
comment17.text=\r\n\ Sets\ tnew\ population\r\n\ @newPopulation\ Population\ to\ replace\ current\ population\r\n
comment18.params=size\ choices
comment18.target=java.util.ArrayList\ crossOver(int,\ java.util.ArrayList)
comment18.text=\r\n\ Method\ crosses\ over\ random\ solutions\ in\ the\ population\r\n\ @return\ ArrayList\ of\ crossed-over\ solutions\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getCandidates()
comment2.text=\r\n\ Returns\ an\ array\ containing\ all\ of\ the\ canddiate\ solutions\r\n\ @return\ Population\ of\ all\ the\ candidates\r\n
comment3.params=
comment3.target=void\ resetLowest()
comment3.text=\r\n\ Resets\ the\ lowest\ fitness\ value\ to\ very\ high\r\n
comment4.params=x
comment4.target=java.lang.Boolean\ checkIfLowest(double)
comment4.text=\r\n\ Sets\ &\ checks\ if\ the\ @x\ is\ the\ lowest\ fitting\ value\r\n\ @return\ True\ if\ the\ lowest\ &\ x\ is\ to\ be\ the\ lowest\ fitting\ value,\ else\ false\r\n
comment5.params=
comment5.target=double\ getLowest()
comment5.text=\r\n\ @return\ The\ lowest\ value\r\n
comment6.params=
comment6.target=Candidate_Solution\ getBestCandidate()
comment6.text=\r\n\ Get\ the\ best\ candidate\ out\ of\ the\ whole\ population\r\n\ @return\ Best\ Candidate_Solution\r\n
comment7.params=
comment7.target=double\ getTotalFitness()
comment7.text=\r\n\ Returns\ the\ sum\ of\ all\ the\ fitness\ values\ candidates\ in\ the\ population\r\n\ @return\ Sum\ of\ fitness\ for\ all\ candidates\r\n
comment8.params=candidateArray
comment8.target=double\ getTotalFitness(java.util.ArrayList)
comment8.text=\r\n\ Returns\ the\ total\ fitness\ of\ all\ the\ given\ candidates\r\n\ @candidateArray\ Number\ of\ candidates\ wanted\ to\ be\ summed\r\n\ @return\ Sum\ of\ fitness\ of\ of\ Candidate\ Solutions\r\n
comment9.params=
comment9.target=double[]\ getBestFit()
comment9.text=\r\n\ Returns\ the\ best\ inputs\ of\ all\ the\ candidates,\ to\ give\ the\ best\ fitnes\ value\r\n\ @return\ Array\ of\ Doubles,\ whihc\ give\ the\ best\ fitness\ value\r\n
numComments=19
