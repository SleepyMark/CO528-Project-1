#BlueJ class context
comment0.target=Candidate_Solution
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Candidate_Solution\ here.\r\n\r\n\ @author\ Mark\ Cabrera\ (mc967)\r\n\ @version\ 1.5.0\r\n
comment1.params=
comment1.target=Candidate_Solution()
comment1.text=\r\n\ Initalises\ the\ variables\ \r\n
comment2.params=
comment2.target=Candidate_Solution\ generate()
comment2.text=\r\n\ Generates\ new\ dial\ value,\ for\ the\ candidate\ solution\r\n\ @return\ The\ instance\ of\ this\ Solution\r\n
comment3.params=
comment3.target=void\ mutate()
comment3.text=\r\n\ This\ method\ mutates\ this\ solution,\ and\ is\ somewhat\ 'smart'\r\n\ When\ the\ fitness\ value\ is\ high\ then\ the\ mutationRate,\ or\ 'accuracy'\ is\ very\ low,\ aka\ very\ big\ jumps\r\n\ When\ the\ fitness\ value\ is\ low\ then\ the\ mutationRate,\ or\ 'accuracy'\ is\ very\ high,\ aka\ very\ small\ jumps\r\n
comment4.params=
comment4.target=double[]\ getValues()
comment4.text=\r\n\ @return\ The\ 20\ dial\ inputs\ of\ the\ candidate\r\n
comment5.params=fit
comment5.target=void\ setFitness(double)
comment5.text=\r\n\ Sets\ the\ fitness\ value\ of\ the\ solution.\ Previous\ fitness\ is\ a\ stored\r\n
comment6.params=
comment6.target=double\ getFitness()
comment6.text=\r\n\ Returns\ the\ fitness\ of\ the\ solution\r\n\ @return\ (double)\ fitnessValue\r\n
comment7.params=index\ value
comment7.target=void\ setDial(int,\ double)
comment7.text=\r\n\ Sets\ the\ dial\ value\ at\ the\ given\ index\r\n\ @index\ The\ dial\ which\ is\ changed\ (0-20)'\r\n\ @value\ The\ value\ wanting\ to\ be\ written0in\r\n
comment8.params=b
comment8.target=Candidate_Solution\ crossOver(Candidate_Solution)
comment8.text=\r\n\ This\ solution\ crosses\ over\ the\ current\ &\ a\ given\ solution,\ in\ an\ alternating\ pattern\r\n\ @return\ Crossover\ of\ the\ two\ solutions\r\n
numComments=9
